name: Sync Reusable Workflows
# Git App Rights (Repo):
# Contents write
# Pull requests write
# Workflows write

# OPTIONAL Create ruleset protection repo-sync/comments for bot-repo Pull request without review
on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - '**/R_*.yml'
      - '!.github/**'
      - '!**/*.md'
jobs:
  sync_files:
    if: github.event_name == 'pull_request' && github.actor != 'testsyncgha[bot]'
    runs-on: ubuntu-latest
    outputs:
      status: ${{ job.status }}
    steps:
      - id: create_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PEM }}
          permissions: >-
            {
              "contents": "write",
              "metadata": "read",
              "pull_requests": "write",
              "workflows": "write"
            }
      - name: Checkout Repository
        id: checkout_branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Comment lines
        if: steps.checkout_branch.outcome == 'success'
        id: comment_lines
        run: |
          for file in $(find . -type f -name 'R_*.yml' -not -path './.github/*' ); do
            destination=".github/workflows/"
            new_name="$(dirname "$file")/$(basename "$file" .yml)_temp.yml"
            cp "$file" "$new_name"
            echo "copied files from $file to $new_name"
            awk '/^name:/ { inside_block = 1; print $0 } inside_block { if (!/^on:/) print "#" $0 } /^on:/ && inside_block { inside_block = 0 } !inside_block { print $0 }' $new_name > temp_file && mv temp_file $new_name
            echo "done commenting lines in $new_name"
            mv "$new_name" "$destination"
            echo "copied files from "$new_name" to "$destination""
            newfile="${destination}$(basename "$new_name")"
            last_path="${newfile/_temp/}"
            mv "$newfile" "$last_path"
            echo "moved files from "$newfile" to "$last_path""
          done

      - name: Create Pull Request
        id: cpr
        if: steps.comment_lines.outcome == 'success'
        uses: peter-evans/create-pull-request@v5
        with:
          title: "Reusable Workflows: Commenting lines"
          commit-message: "Reusable Workflows: Commenting lines"
          body: "Updated workflows files with commented lines"
          branch: ${{ github.event.pull_request.head.ref }}-doc
          delete-branch: true
          token: ${{ steps.create_token.outputs.token }}
      - name: Pull Request Automerge
        id: automerge
        if: steps.cpr.outputs.pull-request-operation == 'created'
        run: |
          gh pr merge --squash --auto ${{ steps.cpr.outputs.pull-request-number }}
        env:
          GH_TOKEN: ${{ steps.create_token.outputs.token }}
      - name: Approve pull request
        if: steps.automerge.outcome == 'success'
        uses: andrewmusgrave/automatic-pull-request-review@0.0.5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          event: COMMENT
          body: 'Synced reusable workflows files ${{ steps.cpr.outputs.pull-request-url }}'


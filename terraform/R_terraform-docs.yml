name: Terraform Docs

description: |+
  This workflow will be triggered on push to main branch and will update the README.adoc file with the latest terraform docs.
author: EnergyPool devops@energy-pool.eu

on:
  workflow_call:
    inputs:
      base_branch:
        required: true
        type: string
        description: "The base branch to create the PR against"


jobs:
  docs:
    runs-on: [gha-private-runners]
    steps:
#      - name: Install github cli
#        run: |
#          sudo apt update
#          sudo apt install gh -y
# GH CLI is already installed on the runners!?
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.base_branch }}
      - name: Setup git config
        run: |
          git config --global user.name "gha-runner"
          git config --global user.email "devops@energy-pool.eu"
      - name: Create new pr
        id: pr
        run: |
          head_branch="update/terraform-docs/gha-$(date +%s)"
          git checkout -b "$head_branch"
          echo "head_branch=$head_branch" >> "$GITHUB_OUTPUT"
      - name: Render terraform docs
        uses: terraform-docs/gh-actions@v1.0.0
        with:
          find-dir: .
          output-file: README.adoc
          output-format: asciidoc table
          output-method: inject
          template: "//TF-DOCS-START\n{{ .Content }}\n//TF-DOCS-END"
      - run: |
          if [[ -n $(git status -s) ]]; then
            sudo chown -R "$(id -u)" .
            git add .
            git commit -m "update: terraforms-docs"
            git push origin "${{ steps.pr.outputs.head_branch }}"
            gh pr list -q '.[] | select(.headRefName match("update/terraform-docs/gha-.*"))' \
              --json number,headRefName \
              | jq -r '.number' \
              | xargs -I {} sh -c \
              'gh pr comment -b "This PR is outdated, a new one will be created." {}; gh pr close {}'
            gh pr create \
              --title "Update Terraform Docs" \
              --body "Generated by GHA & terraform-docs" \
              --base ${{ inputs.base_branch }} \
              --head ${{ steps.pr.outputs.head_branch }}
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
